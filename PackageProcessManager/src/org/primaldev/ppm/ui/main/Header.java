package org.primaldev.ppm.ui.main;

import com.github.peholmst.mvp4vaadin.navigation.ui.NavigationBar;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;

public class Header extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private NavigationBar navigationBar;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;
	@AutoGenerated
	private Button logout;
	@AutoGenerated
	private Button availableTasks;
	@AutoGenerated
	private Button userTask;
	@AutoGenerated
	private Label label_1;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public Header() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1,
				"top:0.0px;right:1.0px;left:0.0px;");
		
		// navigationBar
		navigationBar = new NavigationBar();
		navigationBar.setImmediate(false);
		navigationBar.setWidth("-1px");
		navigationBar.setHeight("-1px");
		mainLayout.addComponent(navigationBar, "top:100.0px;left:0.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("100px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("20px");
		label_1.setValue("Process Manager");
		horizontalLayout_1.addComponent(label_1);
		horizontalLayout_1.setComponentAlignment(label_1, new Alignment(48));
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		horizontalLayout_1.addComponent(horizontalLayout_2);
		horizontalLayout_1.setComponentAlignment(horizontalLayout_2,
				new Alignment(48));
		
		return horizontalLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("495px");
		horizontalLayout_2.setHeight("100px");
		horizontalLayout_2.setMargin(false);
		
		// userTask
		userTask = new Button();
		userTask.setCaption("My Tasks (0)");
		userTask.setImmediate(false);
		userTask.setWidth("-1px");
		userTask.setHeight("-1px");
		horizontalLayout_2.addComponent(userTask);
		horizontalLayout_2.setComponentAlignment(userTask, new Alignment(34));
		
		// availableTasks
		availableTasks = new Button();
		availableTasks.setCaption("Available Tasks (0)");
		availableTasks.setImmediate(false);
		availableTasks.setWidth("-1px");
		availableTasks.setHeight("-1px");
		horizontalLayout_2.addComponent(availableTasks);
		horizontalLayout_2.setComponentAlignment(availableTasks, new Alignment(
				33));
		
		// logout
		logout = new Button();
		logout.setCaption("Logout");
		logout.setImmediate(false);
		logout.setWidth("-1px");
		logout.setHeight("-1px");
		horizontalLayout_2.addComponent(logout);
		horizontalLayout_2.setComponentAlignment(logout, new Alignment(48));
		
		return horizontalLayout_2;
	}

}
