package org.primaldev.ppm.ui.task;

import java.util.List;

import org.activiti.engine.task.Comment;
import org.activiti.engine.task.IdentityLinkType;
import org.primaldev.ppm.util.ProcessUtil;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Notification;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;

public class TaskCommentsForm extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button submitButton;
	@AutoGenerated
	private TextArea newCommentText;
	@AutoGenerated
	private Button closeButton;
	@AutoGenerated
	private TextArea coomentText;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	
	Window mywindow;
	TaskProd task;
	
	public TaskCommentsForm(Window mywindow, TaskProd task) {
		this.task=task;
		this.mywindow = mywindow;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		addClickListeners();
		initTable();
	}
	
	
	private void initTable(){
		List<Comment> comments = ProcessUtil.getTaskService().getProcessInstanceComments(task.getTask().getProcessInstanceId());
		String commentText = ">";
		if (comments.size() > 0 ){
			commentText=">>\n";
		}
		for (Comment comment:comments){
			commentText += comment.getUserId() + ":\n";
			commentText += comment.getFullMessage();
			commentText += "\n\n";
		}
		coomentText.setValue(commentText);
	}
	
	
	private void addClickListeners(){
		closeButton.addClickListener(new Button.ClickListener() {
			public void buttonClick(ClickEvent event) {
				UI.getCurrent().removeWindow(mywindow);
			}
		});
		
		submitButton.addClickListener(new Button.ClickListener() {
			public void buttonClick(ClickEvent event) {
				submitComment();
			}
		});
	}
	
	
	private void submitComment(){		
		
		if (newCommentText.getValue().length() > 0) {
			String userId = ProcessUtil.getIdOfCurrentUser();
        	if (userId !=null){
        		ProcessUtil.getTaskService().addUserIdentityLink(task.getId(), userId, IdentityLinkType.PARTICIPANT);
        		ProcessUtil.getTaskService().addComment(task.getId(), task.getTask().getProcessInstanceId(), newCommentText.getValue());
        		initTable();
        	}else{
        		Notification.show("Bad User", "Username unknown, not posting", Notification.Type.ERROR_MESSAGE);
        	}
		}
	}
	
	
	

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("660px");
		mainLayout.setHeight("680px");
		
		// top-level component properties
		setWidth("660px");
		setHeight("680px");
		
		// coomentText
		coomentText = new TextArea();
		coomentText.setCaption("Comments");
		coomentText.setImmediate(false);
		coomentText.setWidth("580px");
		coomentText.setHeight("440px");
		mainLayout.addComponent(coomentText, "top:40.0px;left:40.0px;");
		
		// closeButton
		closeButton = new Button();
		closeButton.setCaption("Close");
		closeButton.setImmediate(true);
		closeButton.setWidth("-1px");
		closeButton.setHeight("-1px");
		mainLayout.addComponent(closeButton, "top:634.0px;left:530.0px;");
		
		// newCommentText
		newCommentText = new TextArea();
		newCommentText.setCaption("Add Comment");
		newCommentText.setImmediate(false);
		newCommentText.setWidth("580px");
		newCommentText.setHeight("-1px");
		mainLayout.addComponent(newCommentText, "top:504.0px;left:40.0px;");
		
		// submitButton
		submitButton = new Button();
		submitButton.setCaption("Submit");
		submitButton.setImmediate(true);
		submitButton.setWidth("-1px");
		submitButton.setHeight("-1px");
		mainLayout.addComponent(submitButton, "top:634.0px;left:80.0px;");
		
		return mainLayout;
	}

}
