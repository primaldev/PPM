package org.primaldev.ppm.ui.identity;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.activiti.engine.IdentityService;
import org.activiti.engine.ProcessEngines;
import org.activiti.engine.identity.Group;
import org.activiti.engine.identity.GroupQuery;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.TwinColSelect;

public class UserGroupForm extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private Label userCaption;

	@AutoGenerated
	private Label label_2;

	@AutoGenerated
	private Label label_1;

	@AutoGenerated
	private Button saveButton;

	@AutoGenerated
	private Button cancelButton;

	@AutoGenerated
	private TwinColSelect groupListSelect;

	String userName;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public UserGroupForm(String userName) {
		this.userName = userName;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		initComponents();
		// TODO add user code here
	}
	
	private void initComponents() {		
		userCaption.setValue(String.format("Groups for user %s:", userName));
		
		List<Group> allGroups = getAllGroups();
		HashSet<String> userGroupNames = getUserGroupNames();	
		
		for (Group group : allGroups) {
			groupListSelect.addItem(group.getName());		
			
		}
		
		groupListSelect.setValue(userGroupNames);
		
	}
	
	
	
	private List<Group> getAllGroups() {
		GroupQuery query = getIdentityService().createGroupQuery();
		return query.orderByGroupId().asc().list();
	}	
	
	private HashSet<String> getUserGroupNames() {
		GroupQuery query = getIdentityService().createGroupQuery();
		List<Group> groupList = query.groupMember(userName).list();
		HashSet<String> groupIdSet = new HashSet<String>();
		for (Group group : groupList) {
			groupIdSet.add(group.getName());
		}
		return groupIdSet;
	}
	
	private IdentityService getIdentityService() {
		return ProcessEngines.getDefaultProcessEngine().getIdentityService();
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("520px");
		mainLayout.setHeight("420px");
		
		// top-level component properties
		setWidth("520px");
		setHeight("420px");
		
		// groupListSelect
		groupListSelect = new TwinColSelect();
		groupListSelect.setImmediate(false);
		groupListSelect.setWidth("440px");
		groupListSelect.setHeight("280px");
		mainLayout.addComponent(groupListSelect, "top:60.0px;left:40.0px;");
		
		// cancelButton
		cancelButton = new Button();
		cancelButton.setCaption("Cancel");
		cancelButton.setImmediate(true);
		cancelButton.setWidth("-1px");
		cancelButton.setHeight("-1px");
		mainLayout.addComponent(cancelButton, "top:360.0px;left:340.0px;");
		
		// saveButton
		saveButton = new Button();
		saveButton.setCaption("Save");
		saveButton.setImmediate(true);
		saveButton.setWidth("-1px");
		saveButton.setHeight("-1px");
		mainLayout.addComponent(saveButton, "top:360.0px;left:90.0px;");
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("Available");
		mainLayout.addComponent(label_1, "top:40.0px;left:80.0px;");
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("Assigned");
		mainLayout.addComponent(label_2, "top:40.0px;left:340.0px;");
		
		// userCaption
		userCaption = new Label();
		userCaption.setImmediate(false);
		userCaption.setWidth("300px");
		userCaption.setHeight("-1px");
		userCaption.setValue("Label");
		mainLayout.addComponent(userCaption, "top:20.0px;left:120.0px;");
		
		return mainLayout;
	}

}
